function [T]=count_unique_2d(x1, x2)
%COUNT_UNIQUE_2D  Determines unique values, and counts occurrences
%   [T] = count_unique_2d(x1,x2)
%
%   This function determines unique combined values of two arrays, and also counts the
%   number of instances of those values. For example, count all possible combinations of cars' makers and years from a city's 10-year vehicle accident report.
%   This is based on Anthony Kendall's count_unique.m. https://www.mathworks.com/matlabcentral/fileexchange/23333-determine-and-count-unique-values-of-an-array/content/count_unique.m
%   Now for string array only.
%   Descriptions of Output Variables:
%   uniques:    sorted unique values in 2D
%   numUnique:  number of instances of each unique value in 2D
%
%   Example(s):
%   >> [car_maker_year_table] = count_unique_2D(car_maker,car_year);
%
%   See also: count_unique, unique
% Author: Tao Xie
% Contact: xietao2000[at] gmail [dot] com
% Created: 2016-7-12
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
if nargin ~= 2
   error('Need two vectors as input');
end
if numel(x1)~=numel(x2)
      error('x1 and x2 must have the same number of elements');
      
end

[u1,tmp1] = count_unique(x1);
[u2,tmp2] = count_unique(x2);
clear d2
for i=1:length(u1)
    for j=1:length(u2)
        d2(i,j)=length(intersect(strmatch(u1{i},x1,'exact'),strmatch(u2{j},x2,'exact')));
    end
end
T = array2table(d2,'VariableNames',u2, 'RowNames', u1);
